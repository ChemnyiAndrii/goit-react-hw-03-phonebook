{"version":3,"sources":["app.module.css","components/Filter/filter.module.css","components/Form/form.module.css","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/ContactList/contactList.module.css"],"names":["module","exports","Form","state","name","number","handleNameChange","target","value","setState","props","getName","hanndleSubmit","e","preventDefault","getContact","id","uuidv4","this","className","styles","form","onSubmit","label","input","type","onChange","button","Component","ContactList","contactList","deleteContact","list","map","contact","item","onClick","Filter","filter","getFilterName","App","contacts","data","flag","el","prev","alert","event","filteredItems","toLowerCase","includes","contactId","localStorage","getItem","contactsParsed","JSON","parse","prevProps","prevState","setItem","stringify","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff9de5bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app_title__2YO-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"filter_title__du6ib\",\"input\":\"filter_input__1WQMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3MMGB\",\"label\":\"form_label__3cf1g\",\"input\":\"form_input__1ld0o\",\"button\":\"form_button__i4JQm\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './form.module.css';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleNameChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n    this.props.getName(this.state.name);\r\n  };\r\n\r\n  hanndleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.getContact({ ...this.state, id: uuidv4() });\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.hanndleSubmit}>\r\n        <label className={styles.label}>\r\n          Name:\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleNameChange}\r\n          ></input>\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone:\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleNameChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  getContact: PropTypes.func,\r\n  getName: PropTypes.func,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactList.module.css';\r\n\r\nexport function ContactList({ contactList, deleteContact }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contactList.map(contact => {\r\n        return (\r\n          <li className={styles.item} key={contact.id}>\r\n            <span>{contact.name}</span>\r\n            <span>: {contact.number}</span>\r\n            <button\r\n              className={styles.button}\r\n              onClick={() => deleteContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(PropTypes.object),\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  deleteContact: PropTypes.func,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nexport function Filter({ filter, getFilterName }) {\r\n  return (\r\n    <>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={getFilterName}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  getFilterName: PropTypes.func,\r\n};","import React, { Component } from 'react';\nimport { Form } from './components/Form/Form';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\n\nimport styles from './app.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const contactsParsed = JSON.parse(contacts);\n    if (contactsParsed) {\n      this.setState({ contacts: contactsParsed });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  getName = data => {\n    this.setState({ name: data });\n  };\n\n  getContact = contact => {\n    let flag = true;\n\n    this.state.contacts.map(el =>\n      el.name === contact.name ? (flag = false) : '',\n    );\n\n    flag\n      ? this.setState(prev => {\n          return { ...prev, contacts: [...prev.contacts, contact] };\n        })\n      : alert(`${contact.name} is already in contacts`);\n  };\n\n  getFilterName = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  filteredItems = () => {\n    return this.state.filter\n      ? this.state.contacts.filter(el =>\n          el.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n        )\n      : this.state.contacts;\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <h2 className={styles.title}>Phonebook</h2>\n        <Form getContact={this.getContact} getName={this.getName} />\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter filter={this.state.filter} getFilterName={this.getFilterName} />\n        <ContactList\n          contactList={this.filteredItems()}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactList_item__2Jw6N\",\"button\":\"contactList_button__wfcA-\",\"list\":\"contactList_list__2RitH\"};"],"sourceRoot":""}